{"version":3,"sources":["components/Filter.jsx","components/PersonForm.jsx","components/Persons.jsx","components/Notification.jsx","services/persons.js","App.jsx","reportWebVitals.js","index.js"],"names":["Filter","filter","handleFilter","value","onInput","PersonForm","name","number","nameInput","numberInput","submit","onSubmit","type","Persons","persons","deletePerson","map","person","onClick","window","confirm","id","delPerson","Notification","message","messageType","className","baseUrl","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","notification","setNotification","notify","timeout","setTimeout","useEffect","axios","get","then","data","catch","err","console","error","filtered","trim","length","toLowerCase","includes","e","target","event","preventDefault","newObject","personExist","find","patch","post","createPerson","Math","max","concat","delete","removePerson","response","status","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca04151d.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Filter({ filter, handleFilter }) {\n  return (\n    <p>Filter shown with <input value={filter} onInput={handleFilter} /></p>\n  )\n}\n\nexport default Filter\n","import React from \"react\";\n\nconst PersonForm = ({ name, number, nameInput, numberInput, submit }) => {\n  return (\n    <form onSubmit={submit}>\n      <div>\n        name:{\" \"}\n        <input value={name} onInput={nameInput} />\n      </div>\n      <div>\n        number:{\" \"}\n        <input\n          value={number}\n          onInput={numberInput}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from 'react'\n\nconst Persons = ({ persons, deletePerson }) => {\n  const delPerson = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)) deletePerson(person.id)\n  }\n  return (\n    <>\n      {persons.map((person) => <p key={`person-${person.id}`}>{person.name} {' '} {person.number} <button onClick={() => delPerson(person)}>delete</button></p>)}\n    </>\n  )\n}\n\nexport default Persons\n","const Notification = ({ message, messageType }) => {\n  if (!message) {\n    return null\n  }\n\n  return (\n    <div className={messageType}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nexport const getPeople = () => {\n  return axios.get(baseUrl)\n}\n\nexport const createPerson = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nexport const updatePerson = (id, newObject) => {\n  return axios.patch(`${baseUrl}/${id}`, newObject)\n}\n\nexport const removePerson = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n","import React, { useEffect, useState } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Notification from \"./components/Notification\";\n\nimport {\n  getPeople,\n  createPerson,\n  updatePerson,\n  removePerson,\n} from \"./services/persons\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [notification, setNotification] = useState({\n    message: \"\",\n    messageType: \"\",\n  });\n\n  const generateId = () => Math.max(...persons.map((person) => person.id)) + 1;\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    if (!newName || !newNumber) return;\n\n    const personExist = persons.find((person) => person.name === newName);\n    if (personExist) {\n      if (\n        !window.confirm(\n          `${personExist.name} is already added to phonebook, replace the old number with a new one?`\n        )\n      )\n        return;\n\n      updatePerson(personExist.id, {\n        number: newNumber,\n      })\n        .then(({ data }) => {\n          setPersons((persons) =>\n            persons.map((person) => {\n              if (person.id === data.id) person.number = data.number;\n              return person;\n            })\n          );\n          notify(`updated ${newName}`)\n          setNewName(\"\");\n          setNewNumber(\"\");\n        })\n        .catch((err) => console.error({ err }));\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber,\n        id: generateId(),\n      };\n\n      createPerson(newPerson)\n        .then(({ data }) => {\n          setPersons((persons) => persons.concat(data));\n          notify(`Added ${newName}`)\n          setNewName(\"\");\n          setNewNumber(\"\");\n        })\n        .catch((err) => console.error({ err }));\n    }\n  };\n\n  const deletePerson = (id) => {\n    removePerson(id)\n      .then(() => {\n        const { name } = persons.find(person => person.id === id)\n        setPersons((persons) => persons.filter((person) => person.id !== id))\n        notify(`${name} removed`)\n      })\n      .catch((err) => {\n        if (err.response && err.response.status && err.response.status === 404) {\n          setPersons((persons) => persons.filter((person) => person.id !== id))\n          notify(`${persons.find(person => person.id === id).name} has already been removed from server`, 'error')\n        } else {\n          console.error({ err })\n        }\n      });\n  };\n\n  const notify = (message, type = 'success', timeout = 1000 * 15) => {\n    setNotification({\n      message,\n      messageType: type\n    })\n\n    setTimeout(() => {\n      setNotification({\n        message: '',\n        messageType: ''\n      })\n    }, timeout)\n  }\n\n  const handleFilter = (e) => setFilter(e.target.value);\n  const handleNameInput = (e) => setNewName(e.target.value);\n  const handleNumberInput = (e) => setNewNumber(e.target.value);\n\n  useEffect(() => {\n    getPeople()\n      .then(({ data }) => setPersons(data))\n      .catch((err) => console.error({ err }));\n  }, []);\n\n  const filtered = filter.trim().length\n    ? persons.filter((person) =>\n        person.name.toLowerCase().includes(filter.toLowerCase())\n      )\n    : persons;\n\n  return (\n    <div>\n      <Notification\n        message={notification.message}\n        messageType={notification.messageType}\n      />\n      <h1>Phonebook</h1>\n      <Filter filter={filter} handleFilter={handleFilter} />\n\n      <h2>add a new</h2>\n      <PersonForm\n        name={newName}\n        number={newNumber}\n        nameInput={handleNameInput}\n        numberInput={handleNumberInput}\n        submit={addPerson}\n      />\n\n      <h2>Numbers</h2>\n      <Persons deletePerson={deletePerson} persons={filtered} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}